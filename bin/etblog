#!/usr/bin/env ruby
require 'etblog'
require 'fileutils'
require 'socket'
require 'uri'

action = ARGV[0] || 'help'
if ['-help', '--help', '-h', '-?', 'help'].include? action then
	puts "Usage: #{$0} init   # creates a new blog in PWD"
	puts "       #{$0} build  # compiles the blog into HTML files"
	puts "       #{$0} serve  # starts a web server with the blog"
	puts "       #{$0} help   # shows this help message"
	exit 1
end

if action == 'init' then
	ETBlogCore.new(Dir.pwd)
	puts "Created a new ETBlog blog in #{Dir.pwd}."
	puts ""
	puts "What to do next?"
	puts " - Add some blog posts. It's simple. Just create a Markdown file with the prefix \"post-\" prepended before the actual filename, open it in your favorite editor and start editing. No need to specify the date or front matters."
	puts "   Example for macOS and Linux users:"
	puts "       touch post-hello.md"
	puts "       echo \"# Hello world\" > post-hello.md"
	puts "       echo \"Look how cool my new blog is\" >> post-hello.md"
	puts "       #{$0} build"
	puts ""
	puts " - Add a new theme. By default, the theme that comes with ETBlog looks really old-fashioned. Try adapting an existing Bootstrap or UIKit theme. Notice that a theme cannot contain any internal JavaScript or CSS dependencies - it can only use extenal libraries and JS, such as Bootstrap from CDNJS. After you are finished with the theme, save it to \"index.html\". And yes, you should definetly check out this guide on creating themes: http://timkoi.gitlab.io/etblog/newtheme"
	puts " - Build your blog. The resulting blog files with be placed into \"static\". Copy over that folder onto GitLab Pages or your web server and enjoy your new blog!"
	puts ""
	puts "Have a great time using ETBlog!"
elsif action == 'build' || action == 'make' then
	ETBlogCore.new(Dir.pwd).build
	puts "Done!"
elsif action == 'serve' || action == 'server' || action == 'demo' then
	if not File.exists? Dir.pwd + '/blog.plist' then
		raise "There is no blog in #{Dir.pwd} - blog.plist does not exist. Try running \"#{$0} init\" first?"
	end
	temp_dir = "/tmp/etblogdemo#{rand(9999)}"
	if ENV['OS'] == 'Windows_NT' then
		temp_dir = Dir.pwd + '/' + File.dirname(test_dir)
	end
	if File.directory? temp_dir then
		FileUtils.rm_rf(temp_dir)
	end
	port = ARGV[1] || 8080
	if String === port then
		port = port.to_i
	end
	puts "Running on port #{port}..."
	server = TCPServer.new('0.0.0.0', port)
	loop do
		socket = server.accept
		ETBlogCore.new(Dir.pwd, temp_dir).build
		path = temp_dir + '/' + socket.gets.split(' ')[1]
		if File.directory? path then
			path += '/index.html'
		end
		if not File.exists? path then
			socket.print "HTTP/1.1 404 Not Found\r\n"
			socket.print "Content-Type: text/plain\r\n"
			socket.print "Connection: close\r\n\r\n"
			socket.print "NOT FOUND"
		else
			socket.print "HTTP/1.1 200 OK\r\n"
			socket.print "Content-Type: text/html\r\n"
			socket.print "Connection: close\r\n\r\n"
			socket.print File.read(path)
		end
		socket.close
		FileUtils.rm_rf(temp_dir)
	end
else
	raise "Unknown action - \"#{action}\"."
end

exit 0
